// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using treadmill_server.Contexts;

#nullable disable

namespace treadmill_server.Migrations
{
    [DbContext(typeof(TreadmillEfCoreContext))]
    [Migration("20250704194554_codeRefactor")]
    partial class codeRefactor
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ChallengeFitnessMachine", b =>
                {
                    b.Property<int>("ChallengesId")
                        .HasColumnType("integer");

                    b.Property<int>("FitnessMachinesId")
                        .HasColumnType("integer");

                    b.HasKey("ChallengesId", "FitnessMachinesId");

                    b.HasIndex("FitnessMachinesId");

                    b.ToTable("ChallengeFitnessMachine");
                });

            modelBuilder.Entity("ChallengeUser", b =>
                {
                    b.Property<int>("ChallengesId")
                        .HasColumnType("integer");

                    b.Property<int>("UsersId")
                        .HasColumnType("integer");

                    b.HasKey("ChallengesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("ChallengeUser");
                });

            modelBuilder.Entity("treadmill_server.Entities.Challenge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ChallengeType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndTimeUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GoalId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartTimeUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GoalId")
                        .IsUnique();

                    b.ToTable("Challenges");
                });

            modelBuilder.Entity("treadmill_server.Entities.FitnessMachine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CalorieExpenditure")
                        .HasColumnType("integer");

                    b.Property<int>("DeviceType")
                        .HasColumnType("integer");

                    b.Property<double>("DistanceTraveled")
                        .HasColumnType("double precision");

                    b.Property<int>("HeartRate")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StepCount")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("FitnessMachines");
                });

            modelBuilder.Entity("treadmill_server.Entities.Goal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Condition")
                        .HasColumnType("integer");

                    b.Property<double>("ConditionValue")
                        .HasColumnType("double precision");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("treadmill_server.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("treadmill_server.Entities.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CalorieExpenditure")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("EndTimeUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FitnessMachineId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartTimeUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TraveledDistance")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FitnessMachineId");

                    b.HasIndex("UserId");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("ChallengeFitnessMachine", b =>
                {
                    b.HasOne("treadmill_server.Entities.Challenge", null)
                        .WithMany()
                        .HasForeignKey("ChallengesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("treadmill_server.Entities.FitnessMachine", null)
                        .WithMany()
                        .HasForeignKey("FitnessMachinesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ChallengeUser", b =>
                {
                    b.HasOne("treadmill_server.Entities.Challenge", null)
                        .WithMany()
                        .HasForeignKey("ChallengesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("treadmill_server.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("treadmill_server.Entities.Challenge", b =>
                {
                    b.HasOne("treadmill_server.Entities.Goal", "Goal")
                        .WithOne()
                        .HasForeignKey("treadmill_server.Entities.Challenge", "GoalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Goal");
                });

            modelBuilder.Entity("treadmill_server.Entities.FitnessMachine", b =>
                {
                    b.HasOne("treadmill_server.Entities.User", "User")
                        .WithMany("FitnessMachines")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("treadmill_server.Entities.Workout", b =>
                {
                    b.HasOne("treadmill_server.Entities.FitnessMachine", null)
                        .WithMany()
                        .HasForeignKey("FitnessMachineId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("treadmill_server.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("treadmill_server.Entities.User", b =>
                {
                    b.Navigation("FitnessMachines");
                });
#pragma warning restore 612, 618
        }
    }
}
